// <auto-generated />
using CheineseSale.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheineseSale.Migrations
{
    [DbContext(typeof(GiftsDbContext))]
    [Migration("20241226181559_CascadeDeleteForDonorsAndGifts")]
    partial class CascadeDeleteForDonorsAndGifts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CheineseSale.Models.Catagory", b =>
                {
                    b.Property<int>("CatagoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Catagory_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatagoryId"));

                    b.Property<string>("CatagoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Catagory_name");

                    b.HasKey("CatagoryId");

                    b.ToTable("Catagory", (string)null);
                });

            modelBuilder.Entity("CheineseSale.Models.Donter", b =>
                {
                    b.Property<int>("DonterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Donter_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonterId"));

                    b.Property<string>("DonterFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Donter_first_name");

                    b.Property<string>("DonterLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Donter_Last_Name");

                    b.Property<string>("DonterMail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Donter_Mail");

                    b.Property<string>("DonterPhon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Donter_Phon");

                    b.HasKey("DonterId");

                    b.ToTable("Donter", (string)null);
                });

            modelBuilder.Entity("CheineseSale.Models.Gift", b =>
                {
                    b.Property<int>("GiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Gift_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiftId"));

                    b.Property<int>("CatagoryId")
                        .HasColumnType("int")
                        .HasColumnName("Catagory_id");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DonterId")
                        .HasColumnType("int")
                        .HasColumnName("Donter_Id");

                    b.Property<string>("GiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Gift_name");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int")
                        .HasColumnName("Image_Id");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Purchaser")
                        .HasColumnType("int");

                    b.HasKey("GiftId");

                    b.HasIndex("CatagoryId");

                    b.HasIndex("DonterId");

                    b.HasIndex("ImageId");

                    b.ToTable("Gift", (string)null);
                });

            modelBuilder.Entity("CheineseSale.Models.GiftsImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Image_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Image_Name");

                    b.HasKey("ImageId");

                    b.ToTable("Gifts_Images", (string)null);
                });

            modelBuilder.Entity("CheineseSale.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserAdress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_Email");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_Name");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CheineseSale.Models.UserGift", b =>
                {
                    b.Property<int>("GiftId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("GiftId");

                    b.ToTable("UserGift", (string)null);
                });

            modelBuilder.Entity("CheineseSale.Models.Winner", b =>
                {
                    b.Property<int>("WinnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Winner_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WinnerId"));

                    b.Property<int>("GiftId")
                        .HasColumnType("int")
                        .HasColumnName("Gift_Id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("WinnerId");

                    b.HasIndex("GiftId");

                    b.HasIndex("UserId");

                    b.ToTable("Winner", (string)null);
                });

            modelBuilder.Entity("CheineseSale.Models.Gift", b =>
                {
                    b.HasOne("CheineseSale.Models.Catagory", "Catagory")
                        .WithMany("Gifts")
                        .HasForeignKey("CatagoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Gift_Catagory");

                    b.HasOne("CheineseSale.Models.Donter", "Donter")
                        .WithMany("Gifts")
                        .HasForeignKey("DonterId")
                        .IsRequired()
                        .HasConstraintName("FK_Gift_Donter");

                    b.HasOne("CheineseSale.Models.GiftsImage", "Image")
                        .WithMany("Gifts")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK_Gift_Gifts_Images");

                    b.Navigation("Catagory");

                    b.Navigation("Donter");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("CheineseSale.Models.UserGift", b =>
                {
                    b.HasOne("CheineseSale.Models.Gift", "Gift")
                        .WithMany()
                        .HasForeignKey("GiftId")
                        .IsRequired()
                        .HasConstraintName("FK_UserGift_Gift");

                    b.Navigation("Gift");
                });

            modelBuilder.Entity("CheineseSale.Models.Winner", b =>
                {
                    b.HasOne("CheineseSale.Models.Gift", "Gift")
                        .WithMany("Winners")
                        .HasForeignKey("GiftId")
                        .IsRequired()
                        .HasConstraintName("FK_Winner_Gift");

                    b.HasOne("CheineseSale.Models.User", "User")
                        .WithMany("Winners")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Winner_User");

                    b.Navigation("Gift");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CheineseSale.Models.Catagory", b =>
                {
                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("CheineseSale.Models.Donter", b =>
                {
                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("CheineseSale.Models.Gift", b =>
                {
                    b.Navigation("Winners");
                });

            modelBuilder.Entity("CheineseSale.Models.GiftsImage", b =>
                {
                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("CheineseSale.Models.User", b =>
                {
                    b.Navigation("Winners");
                });
#pragma warning restore 612, 618
        }
    }
}
